__interface "Main" Pretty 1 500 where
__export  Pretty Doc Mode{LeftMode OneLineMode PageMode ZZigZZagMode} Style TextDetails{Chr PStr Str} braces brackets cat char colon comma double doubleQuotes empty equals fcat float fsep fullRender hang hcat hsep int integer lbrace lbrack lparen nest parens ptext punctuate quotes rational rbrace rbrack render renderStyle rparen semi sep space text vcat zdzd zdzpzd zlzg zlzpzg;
import PrelBase ! :: 1;
import PrelFloat :: 1;
import PrelNum :: 1;
import PrelTup :: 1;
import PrelReal :: 1;
import PrelEnum :: 1;
import PrelShow :: 1;
import PrelList :: 1;
import Ratio :: 1;
infixl 6 zlzpzg infixl 6 zlzg infixl 5 zdzpzd infixl 5 zdzd;
instance {PrelShow.Show Doc} = zdfShowDoc ;
fullRender :: __forall a => Mode -> PrelBase.Int -> PrelFloat.Float -> (TextDetails -> a -> a) -> a -> Doc -> a;
render :: Doc -> PrelBase.String;
renderStyle :: Style -> Doc -> PrelBase.String;
fcat :: [Doc] -> Doc;
fsep :: [Doc] -> Doc;
cat :: [Doc] -> Doc;
sep :: [Doc] -> Doc;
zlzpzg :: Doc -> Doc -> Doc;
zlzg :: Doc -> Doc -> Doc;
zdzpzd :: Doc -> Doc -> Doc;
zdzd :: Doc -> Doc -> Doc;
nest :: PrelBase.Int -> Doc -> Doc;
ptext :: PrelBase.String -> Doc;
text :: PrelBase.String -> Doc;
char :: PrelBase.Char -> Doc;
empty :: Doc;
punctuate :: Doc -> [Doc] -> [Doc];
hang :: Doc -> PrelBase.Int -> Doc -> Doc;
vcat :: [Doc] -> Doc;
hsep :: [Doc] -> Doc;
hcat :: [Doc] -> Doc;
braces :: Doc -> Doc;
brackets :: Doc -> Doc;
parens :: Doc -> Doc;
doubleQuotes :: Doc -> Doc;
quotes :: Doc -> Doc;
rational :: PrelReal.Rational -> Doc;
double :: PrelFloat.Double -> Doc;
float :: PrelFloat.Float -> Doc;
integer :: PrelNum.Integer -> Doc;
int :: PrelBase.Int -> Doc;
rbrace :: Doc;
lbrace :: Doc;
rbrack :: Doc;
lbrack :: Doc;
rparen :: Doc;
lparen :: Doc;
equals :: Doc;
space :: Doc;
comma :: Doc;
colon :: Doc;
semi :: Doc;
data Style = Style {lineLength :: PrelBase.Int, ribbonsPerLine :: PrelFloat.Float, mode :: Mode};
data Mode = PageMode | ZZigZZagMode | LeftMode | OneLineMode;
data Doc = Empty | NilAbove Doc | TextBeside TextDetails PrelBase.Int Doc | Nest PrelBase.Int Doc | Union Doc Doc | NoDoc | Beside Doc PrelBase.Bool Doc | Above Doc PrelBase.Bool Doc;
type RDoc = Doc;
data TextDetails = Chr PrelBase.Char | Str PrelBase.String | PStr PrelBase.String;
zdfShowDoc :: {PrelShow.Show Doc};
