__interface "Main" KindCheck 1 500 where
__export  KindCheck kindCheck kindCheckGoal;
import PrelReal;
import PrelEnum;
import Monad;
import Char;
import PrelConc;
import List;
import Utils;
import Ratio;
import Pretty;
import CurryPP;
import Set;
import TopEnv :: 1 1 1 Source 1 TopEnv 1 bindTopEnv 1 lookupTopEnv 1 qualBindTopEnv 1 qualLookupTopEnv 1 zdfFunctorTopEnv 1 zdfShowTopEnv 1;
import PrelBase ! :: 1;
import PrelNum :: 1;
import PrelTup :: 1;
import PrelIOBase :: 1;
import PrelShow :: 1;
import PrelList :: 1;
import Base :: 1 1 1 Data 1 Linear 1 PIdent 1 TCEnv 1 TypeInfo 1 errorAt 1 internalError 1 isTypeDecl 1 linear 1 tcArity 1 zdfEqPIdent 1 zdfShowTypeInfo 1;
import CurrySyntax :: 1 1 Alt 1 CallConv 1 CondExpr 1 ConstrDecl 1 ConstrTerm 1 Decl 1 Equation 1 EvalAnnotation 1 Expression 1 Goal 1 Import 1 ImportSpec 1 Infix 1 InfixOp 1 Lhs 1 Literal 1 NewConstrDecl 1 Qualified 1 Rhs 1 Statement 1 TypeExpr 1 zdfEqAlt 1 zdfEqCallConv 1 zdfEqCondExpr 1 zdfEqConstrDecl 1 zdfEqConstrTerm 1 zdfEqDecl 1 zdfEqEquation 1 zdfEqExpression 1 zdfEqGoal 1 zdfEqInfixOp 1 zdfEqLhs 1 zdfEqLiteral 1 zdfEqNewConstrDecl 1 zdfEqRhs 1 zdfEqStatement 1 zdfEqTypeExpr 1 zdfShowAlt 1 zdfShowCallConv 1 zdfShowCondExpr 1 zdfShowConstrDecl 1 zdfShowConstrTerm 1 zdfShowDecl 1 zdfShowEquation 1 zdfShowExpression 1 zdfShowGoal 1 zdfShowInfixOp 1 zdfShowLhs 1 zdfShowLiteral 1 zdfShowNewConstrDecl 1 zdfShowRhs 1 zdfShowStatement 1 zdfShowTypeExpr 1;
import Ident :: 1 1 Ident 1 ModuleIdent 1 QualIdent 1 anonId 1 isQualified 1 name 1 qualName 1 qualify 1 qualifyWith 1 unqualify 1 zdfEqIdent 1 zdfEqModuleIdent 1 zdfEqQualIdent 1 zdfShowIdent 1 zdfShowModuleIdent 1 zdfShowQualIdent 1;
import Position :: 1 1 Position 1 zdfEqPosition 1 zdfShowPosition 1;
import Env :: 1 1 Env 1;
import Types :: 1 1 Type 1;
import Map :: 1 1 FM 1;
import Maybe :: 1;
import PrelMaybe :: 1;
;
kindCheckGoal :: Base.TCEnv -> CurrySyntax.Goal -> CurrySyntax.Goal;
kindCheck :: Ident.ModuleIdent -> Base.TCEnv -> [CurrySyntax.Decl] -> [CurrySyntax.Decl];
type KindEnv = TopEnv.TopEnv PrelBase.Int;
