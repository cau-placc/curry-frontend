__interface "Main" CPretty 1 500 where
__export  CPretty arrayDecl block collectDecl ppBlock ppCFile ppCase ppCaseStmts ppConst ppDecl ppExpr ppFunCall ppInit ppInits ppLhs ppNestedBlock ppParens ppStmt ppStmts ppTopDecl ppVisi string varDecl vsep;
import PrelReal;
import PrelEnum;
import Maybe;
import Ratio;
import PrelBase ! :: 1;
import PrelFloat :: 1;
import PrelNum :: 1;
import PrelTup :: 1;
import PrelShow :: 1;
import PrelList :: 1;
import CCode :: 1 1 1 CBlock 1 CCase 1 CConst 1 CExpr 1 CFile 1 CInitializzer 1 CStmt 1 CTopDecl 1 CVisibility 1 LVar 1 zdfEqCCase 1 zdfEqCConst 1 zdfEqCExpr 1 zdfEqCInitializzer 1 zdfEqCStmt 1 zdfEqCTopDecl 1 zdfEqCVisibility 1 zdfEqLVar 1;
import Pretty :: 1 1 1 Doc 1 TextDetails 1 braces 1 brackets 1 char 1 colon 1 comma 1 double 1 empty 1 equals 1 hcat 1 int 1 lbrace 1 parens 1 punctuate 1 rbrace 1 semi 1 text 1 zdfShowDoc 1 zdzpzd 1 zlzg 1 zlzpzg 1;
import List :: 1;
import PrelMaybe :: 1;
;
string :: PrelBase.String -> Pretty.Doc;
vsep :: [Pretty.Doc] -> Pretty.Doc;
arrayDecl :: PrelBase.String -> PrelBase.String -> Pretty.Doc;
varDecl :: PrelBase.String -> PrelBase.String -> Pretty.Doc;
block :: [Pretty.Doc] -> Pretty.Doc;
ppFunCall :: PrelBase.String -> [Pretty.Doc] -> Pretty.Doc;
ppParens :: PrelBase.Bool -> Pretty.Doc -> Pretty.Doc;
ppExpr :: PrelBase.Int -> CCode.CExpr -> Pretty.Doc;
ppCaseStmts :: [CCode.CStmt] -> Pretty.Doc;
ppCase :: CCode.CCase -> Pretty.Doc;
ppLhs :: CCode.LVar -> Pretty.Doc;
ppStmt :: CCode.CStmt -> Pretty.Doc;
ppStmts :: [CCode.CStmt] -> Pretty.Doc;
ppDecl :: CCode.CStmt -> Pretty.Doc;
collectDecl :: CCode.CStmt -> [CCode.CStmt] -> [CCode.CStmt];
ppNestedBlock :: CCode.CBlock -> Pretty.Doc;
ppBlock :: Pretty.Doc -> CCode.CBlock -> Pretty.Doc;
ppInit :: CCode.CInitializzer -> Pretty.Doc;
ppInits :: [CCode.CInitializzer] -> Pretty.Doc;
ppConst :: CCode.CConst -> Pretty.Doc;
ppVisi :: CCode.CVisibility -> Pretty.Doc;
ppTopDecl :: CCode.CTopDecl -> Pretty.Doc;
ppCFile :: CCode.CFile -> Pretty.Doc;
