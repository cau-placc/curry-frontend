===============================================================================
==
==  Münster-Curry-Compiler
==  Distribution zur Anwendung in PAKCS
==
==  Letztes Update: 12.04.05

Diese Distribution enthält eine leicht 
modifizierte, einfache Version des Münster-Curry-Compilers (MCC). Dieser
Compiler ist u.a. in der Lage aus Curry-Programmen (entwickelt nach PAKCS-
Standard) FlatCurry- (.fcy), FlatInterface- (.fint) und FlatXML- (_flat.xml)
Darstellungen zu generieren.



Installation
------------

Der Compiler wird durch Aufruf von 'make' im Verzeichnis 'mcc' installiert.


Anwendung
---------

Im Verzeichnis 'mcc/bin/' befinden sich nach erfolgreicher Installation
folgende ausführbare Dateien:

	cyc		- der Curry-Compiler
	cymake		- der Curry-Programm-Builder

Das Kommando 'cyxml' zur Erzeugung von Flat-Dateien sollte in 
Zukunft nicht mehr verwendet werden, da 'cyc' und 'cymake' nun
über entsprechende Optionen verfügen.

Die Übersetzung eines Curry-Programms 'file.curry', sowie sämtlicher
importierter Module nach FlatCurry bzw. FlatInterface, bewirkt folgendes
Kommando:

	cymake --flat file.curry

Hierdurch werden die Dateien mit den entsprechenden Endungen ".fcy" und
".fint" generiert.

Die analogen Übersetzungen in die FlatXML-Darstellung geschehen mittels

	cymake --xml file.curry

Die hierdurch generierte Flat-XML-Datei hat die Endung '_flat.xml'.

Während 'cymake' auch alle Importabhängigkeiten auflöst und die entsprechenden
Module in die gewünschte(n) Darstellung(en) übersetzt, können mittels
'cyc' einzelne Dateien übersetzt werden. Die hierzu nötigen Optionen
sind die selben, wie bei 'cymake'.



Anmerkungen
-----------

- Neben den gewünschten Darstellungen werden zusätzlich noch
  Interface-Dateien (Endung ".icurry") erzeugt. Diese werden
  intern vom MCC benötigt (z.B. zur Auflösung von Import-Abhängigkeiten).

- Der MCC ist leider nicht in der Lage, die Prelude aus der PAKCS-
  Distribution zu nutzen. Daher wird eine erweiterte Version dieser
  Prelude verwendet, die sich im Verzeichnis 'mcc/lib/curry/'
  befindet.

- Um die PAKCS-Bibliotheken für Übersetzungen nutzen zu können 
  muß die Umgebungsvariable 'PAKCS_LIB' auf die entsprechenden Pfade
  verweisen, z.B. mittels

	export PAKCS_LIB=<pakcs path>/pacs/lib:<pakcs path>/pacs/lib/meta:...

 wobei <pakcs path> das Verzeichnis ist, das die PAKCS-Distribution
 enthält.



Bekannte Probeleme
------------------

- Der MCC erlaubt leider (noch) nicht das gleichzeitige Überschreiben und
  Exportieren importierter Bezeichner. Es kann z.B. nicht die Funktion 'map'
  aus der Prelude neu definert und exportiert werden.

- Alle importierten Module benötigen eine 'module ... where'-Deklaration,
  da sie sonst die Bezeichnung 'main' bekommen und nicht importiert
  werden können.

- Lambda-Ausdrücke müssen grundsätzlich geklammert werden.

- 'let'-Anweisungen dürfen nicht folgendes Layout besitzen:

           let x = <expr>
               in ...

- FlatXML-Übersetzungen können derzeit mittels der Funktionen aus dem
  PAKCS-Modul "FlatXML" noch nicht eingelesen werden, da es Unstimmigkeiten
  zwischen dem generierten und den erforderlichen Formaten gibt.

- Leider gibt der MCC derzeit noch keinerlei Warnungen und nur sehr einfach 
  gehaltene Fehlermeldungen aus.


